if (modularization.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

//当使用kotlin来实现Dagger时, 需要以下配置
apply plugin: 'kotlin-kapt'

kapt {
    generateStubs = true

    arguments {
        arg("moduleName", project.getName())
    }
}

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {
            buildConfigField("boolean", "modularization", modularization)
            buildConfigField("boolean", "showLog", "true")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField("boolean", "modularization", modularization)
            buildConfigField("boolean", "showLog", "false")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    resourcePrefix("module")

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (modularization.toBoolean()) {
                manifest.srcFile 'src/main/modularization/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':fastlib')

    //编译引用 , 每个component都需要引用
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    kapt 'com.alibaba:arouter-compiler:1.1.4'

}
